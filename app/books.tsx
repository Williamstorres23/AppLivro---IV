import AsyncStorage from '@react-native-async-storage/async-storage';
import { router, useFocusEffect } from 'expo-router';
import { ref, update } from 'firebase/database';
import React, { useState } from 'react';
import {
  Dimensions,
  FlatList,
  Image,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from 'react-native';
import { database } from '../config/firebaseConfig';

const defaultBooks = [
  {
    id: '1',
    title: 'Dom Casmurro',
    author: 'Machado de Assis',
    genero: 'Cl√°ssicos de Fic√ß√£o',
    publicacao: 1899,
    paginas: 208,
    cover: require('../assets/images/dom_casmurro.jpg'),
    summary: 'Dom Casmurro, de Machado de Assis, retrata Bento Santiago relembrando sua juventude e o romance com Capitu. Dominado pelo ci√∫me, ele questiona a fidelidade dela. A narrativa √© amb√≠gua e subjetiva, deixando d√∫vidas ao leitor. Capitu, com seus "olhos de ressaca", representa o mist√©rio do enredo. O livro prop√µe um mergulho psicol√≥gico no narrador.'
  },
  {
    id: '2',
    title: 'Antes que o Caf√© Esfrie: 1',
    author: 'Toshikazu Kawaguchi',
    genero: 'Fic√ß√£o Cient√≠fica',
    publicacao: 2022,
    paginas: 208,
    cover: require('../assets/images/antes-que-o-cafe-esfrie.jpg'),
    summary: 'Antes que o Caf√© Esfrie, de Toshikazu Kawaguchi, se passa em uma cafeteria em T√≥quio onde √© poss√≠vel viajar no tempo. Quatro personagens enfrentam dilemas pessoais e voltam ao passado em busca de compreens√£o e reconcilia√ß√£o. A viagem tem regras r√≠gidas, como retornar antes que o caf√© esfrie. A narrativa mistura fantasia com reflex√µes sobre arrependimento, perd√£o e aceita√ß√£o. O livro convida o leitor a valorizar o presente e as pequenas oportunidades da vida.'
  },
  {
    id: '3',
    title: 'Crime e Castigo',
    author: 'Fi√≥dor Dostoi√©vski',
    genero: 'Literatura e Fic√ß√£o',
    publicacao: 2016,
    paginas: 592,
    cover: require('../assets/images/crime-e-castigo.jpg'),
    summary: 'Crime e Castigo, de Fi√≥dor Dostoi√©vski, acompanha Rask√≥lnikov, um jovem ex-estudante que comete um assassinato acreditando estar acima da moral comum. Ap√≥s o crime, ele mergulha em um tormento psicol√≥gico e existencial. A narrativa explora culpa, reden√ß√£o e os limites da justi√ßa. Sonia, uma jovem humilde, torna-se s√≠mbolo de compaix√£o e f√©. O romance √© um mergulho profundo na mente humana e nos dilemas √©ticos da sociedade.'
  },
  {
    id: '4',
    title: 'Grande Sert√£o: Veredas',
    author: 'Jo√£o Guimar√£es Rosa',
    genero: 'Literatura Nacional',
    publicacao: 2019,
    paginas: 560,
    cover: require('../assets/images/grande_sertao.jpg'),
    summary: 'Grande Sert√£o: Veredas, de Jo√£o Guimar√£es Rosa, narra a vida de Riobaldo, ex-jagun√ßo que relembra suas aventuras pelo sert√£o e seu amor por Diadorim. A obra mistura a√ß√£o, filosofia e dilemas existenciais, com linguagem inovadora e regionalista. Riobaldo questiona o bem, o mal e at√© faz um pacto com o diabo. Diadorim, revelada como mulher no fim, simboliza o amor imposs√≠vel. O livro √© um mergulho profundo na alma sertaneja e humana.'
  },
  {
    id: '5',
    title: 'Nada Pode Me Ferir',
    author: 'David Goggins',
    genero: 'Autobiografia',
    publicacao: 2023,
    paginas: 320,
    cover: require('../assets/images/nada-pode-me-ferir.jpg'),
    summary: 'Nada Pode Me Ferir, de David Goggins, √© uma autobiografia inspiradora sobre supera√ß√£o extrema. O autor narra sua jornada desde uma inf√¢ncia marcada por abusos e racismo at√© se tornar um dos homens mais resilientes do mundo. Ele defende que a mente desiste antes do corpo e apresenta m√©todos para ultrapassar limites f√≠sicos e mentais. A obra prop√µe disciplina brutal, enfrentamento da dor e autoconhecimento como ferramentas de transforma√ß√£o. √â um verdadeiro manual para quem quer destruir desculpas e alcan√ßar o imposs√≠vel.'
  },
  {
    id: '6',
    title: 'O Alquimista',
    author: 'Paulo Coelho',
    genero: 'Fic√ß√£o Religiosa, Literatura e Fic√ß√£o',
    publicacao: 2017,
    paginas: 208,
    cover: require('../assets/images/o_alquimista.jpg'),
    summary: 'O Alquimista, de Paulo Coelho, conta a jornada de Santiago, um jovem pastor que parte da Espanha rumo ao Egito em busca de um tesouro revelado em sonhos. Ao longo do caminho, ele encontra personagens como Melquisedeque, F√°tima e o Alquimista, que o ajudam a entender sua ‚ÄúLenda Pessoal‚Äù. A narrativa mistura espiritualidade, autoconhecimento e sinais do universo. Santiago descobre que o verdadeiro tesouro est√° na jornada e na transforma√ß√£o interior.'
  },
  {
    id: '7',
    title: 'Outlive: A Arte e a Ci√™ncia de Viver Mais e Melhor',
    author: 'Peter Attia' + 'Bill Gifford',
    genero: 'Ci√™ncia e Sa√∫de',
    publicacao: 2023,
    paginas: 480,
    cover: require('../assets/images/outlive.jpg'),
    summary: 'Outlive: A Arte e a Ci√™ncia de Viver Mais e Melhor, de Peter Attia e Bill Gifford, √© um guia sobre longevidade com foco na preven√ß√£o de doen√ßas cr√¥nicas. O autor prop√µe a ‚ÄúMedicina 3.0‚Äù, que prioriza a√ß√µes personalizadas para evitar os ‚ÄúQuatro Cavaleiros‚Äù do envelhecimento: doen√ßas card√≠acas, c√¢ncer, diabetes tipo 2 e neurodegenerativas. O livro destaca pilares como exerc√≠cio f√≠sico, nutri√ß√£o, sono e sa√∫de emocional, oferecendo estrat√©gias pr√°ticas para melhorar a qualidade e o tempo de vida. Attia tamb√©m apresenta o conceito do ‚ÄúDecatlo do Centen√°rio‚Äù, incentivando h√°bitos que permitam envelhecer com autonomia.'
  },
  {
    id: '8',
    title: 'Pedagogia do Oprimido',
    author: 'Paulo Freire',
    genero: 'Pol√≠tica de Educa√ß√£o e Reforma',
    publicacao: 2019,
    paginas: 256,
    cover: require('../assets/images/pedagogia-do-oprimido.jpg'),
    summary: 'Pedagogia do Oprimido, de Paulo Freire, prop√µe uma educa√ß√£o libertadora voltada √† conscientiza√ß√£o dos oprimidos. O autor critica o modelo ‚Äúbanc√°rio‚Äù de ensino, em que o aluno √© passivo, e defende o di√°logo como ferramenta de transforma√ß√£o. A obra valoriza a pr√°xis ‚Äî uni√£o entre a√ß√£o e reflex√£o ‚Äî como caminho para a liberdade. Freire acredita que ningu√©m liberta ningu√©m sozinho: a liberta√ß√£o ocorre em comunh√£o. √â um marco na luta por justi√ßa social e educa√ß√£o cr√≠tica.'
  },
  {
    id: '9',
    title: 'O Pequeno Pr√≠ncipe',
    author: 'Antoine de Saint-Exup√©ry',
    genero: 'Fantasia, A√ß√£o e Aventura',
    publicacao: 2018,
    paginas: 96,
    cover: require('../assets/images/pequeno-principe.jpg'),
    summary: 'O Pequeno Pr√≠ncipe, de Antoine de Saint-Exup√©ry, narra o encontro entre um piloto e um menino vindo do asteroide B-612. Em sua jornada, o pr√≠ncipe conhece figuras que representam falhas humanas, como vaidade e gan√¢ncia. A amizade com a raposa ensina que ‚Äúo essencial √© invis√≠vel aos olhos‚Äù. A hist√≥ria valoriza o amor, a inf√¢ncia e os la√ßos afetivos. √â uma f√°bula po√©tica sobre o que realmente importa na vida.'
  },
  {
    id: '10',
    title: 'Tudo √© Rio',
    author: 'Carla Madeira',
    genero: 'Fic√ß√£o de G√™nero',
    publicacao: 2021,
    paginas: 210,
    cover: require('../assets/images/tudo-e-rio.jpg'),
    summary: 'Tudo √© Rio, de Carla Madeira, acompanha Dalva e Ven√¢ncio, um casal marcado por uma trag√©dia causada pelo ci√∫me doentio dele. A chegada de Lucy, uma prostituta sedutora, forma um tri√¢ngulo amoroso intenso e doloroso. A narrativa flui como um rio, explorando temas como amor, culpa, perd√£o e reden√ß√£o. Com linguagem po√©tica e visceral, o livro mergulha nas profundezas das emo√ß√µes humanas.'
  },
  {
    id: '11',
    title: 'Verity',
    author: 'Colleen Hoover',
    genero: 'Suspense',
    publicacao: 2020,
    paginas: 320,
    cover: require('../assets/images/verity.jpg'),
    summary: 'Verity, de Colleen Hoover, √© um thriller psicol√≥gico intenso e perturbador. Lowen, uma escritora em crise, √© contratada para terminar os livros de Verity Crawford, autora famosa em estado vegetativo. Ao se mudar para a casa da fam√≠lia, Lowen encontra um manuscrito chocante que revela segredos sombrios sobre Verity e sua rela√ß√£o com os filhos. A tens√£o cresce com a d√∫vida: o manuscrito √© verdade ou fic√ß√£o? O final deixa o leitor dividido entre duas vers√µes inquietantes da hist√≥ria.'
  }
];

export default function BooksPage() {
  const [books, setBooks] = useState<any[]>(defaultBooks);
  const [searchQuery, setSearchQuery] = useState('');
  const [newComment, setNewComment] = useState<{ [key: string]: string }>({});

  // üî• Substitu√≠do `useEffect` por `useFocusEffect` para recarregar a lista ao voltar para a tela.
  useFocusEffect(
    React.useCallback(() => {
      const loadCustomBooks = async () => {
        try {
          const stored = await AsyncStorage.getItem('customBooks');
          const customBooks = stored ? JSON.parse(stored) : [];

          const merged = [
            ...defaultBooks,
            ...customBooks.filter(
              (c: any) => !defaultBooks.some((db) => db.title === c.title)
            ),
          ];

          setBooks(merged);
        } catch (e) {
          console.error('Erro ao carregar livros:', e);
        }
      };

      loadCustomBooks();
    }, [])
  );

  // ‚≠ê Atualizar campo no Firebase + estado local
  const updateBookField = (id: string, field: string, value: any) => {
    const bookRef = ref(database, `books/${id}`);
    update(bookRef, { [field]: value });

    setBooks((prev) =>
      prev.map((b) => (b.id === id ? { ...b, [field]: value } : b))
    );
  };

  // Favoritar
  const toggleFavorite = (book: any) => {
    updateBookField(book.id, 'favorite', !book.favorite);
  };

  // Avaliar
  const handleRating = (book: any, rating: number) => {
    updateBookField(book.id, 'rating', rating);
  };

  // Adicionar coment√°rio
  const addComment = (book: any) => {
    if (!newComment[book.id]) return;
    const updatedComments = [...(book.comments || []), newComment[book.id]];

    updateBookField(book.id, 'comments', updatedComments);

    setNewComment((prev) => ({ ...prev, [book.id]: '' }));
  };

  // Navegar para detalhes
  function handlePress(book: any) {
    router.push({
      pathname: '/bookDetails',
      params: { ...book },
    });
  }

  return (
    <View style={styles.container}>
      <Text style={styles.header}>Lista de Livros</Text>

      {/* üîé Busca */}
      <TextInput
        style={styles.searchInput}
        placeholder="Buscar livro..."
        value={searchQuery}
        onChangeText={setSearchQuery}
      />

      <FlatList
        data={books.filter((book) =>
          book.title.toLowerCase().includes(searchQuery.toLowerCase())
        )}
        keyExtractor={(item) => item.id}
        contentContainerStyle={styles.listContent}
        renderItem={({ item }) => (
          <View style={styles.card}>
            <TouchableOpacity
              onPress={() => handlePress(item)}
              activeOpacity={0.7}
              style={{ flexDirection: 'row' }}
            >
              {item.cover ? (
                typeof item.cover === 'string' ? (
                  <Image source={{ uri: item.cover }} style={styles.cover} />
                ) : (
                  <Image source={item.cover} style={styles.cover} />
                )
              ) : (
                <View
                  style={[
                    styles.cover,
                    { backgroundColor: '#ddd', justifyContent: 'center', alignItems: 'center' },
                  ]}
                >
                  <Text style={{ color: '#666', fontSize: 12 }}>Sem capa</Text>
                </View>
              )}

              <View style={styles.info}>
                <Text style={styles.title}>{item.title}</Text>
                <Text style={styles.author}>por {item.author}</Text>
                <Text style={styles.publicacao}>
                  Publicado em {item.publicacao}
                </Text>
              </View>
            </TouchableOpacity>

            {/* Favoritar */}
            <TouchableOpacity onPress={() => toggleFavorite(item)}>
              <Text style={styles.favorite}>
                {item.favorite ? '‚≠ê Favorito' : '‚òÜ Favoritar'}
              </Text>
            </TouchableOpacity>

            {/* Avalia√ß√£o */}
            <View style={styles.stars}>
              {[1, 2, 3, 4, 5].map((star) => (
                <TouchableOpacity
                  key={star}
                  onPress={() => handleRating(item, star)}
                >
                  <Text style={styles.star}>
                    {item.rating >= star ? '‚òÖ' : '‚òÜ'}
                  </Text>
                </TouchableOpacity>
              ))}
            </View>

            {/* Coment√°rios */}
            <TextInput
              placeholder="Escreva um coment√°rio..."
              value={newComment[item.id] || ''}
              onChangeText={(text) =>
                setNewComment((prev) => ({ ...prev, [item.id]: text }))
              }
              style={styles.commentInput}
            />
            <TouchableOpacity onPress={() => addComment(item)}>
              <Text style={styles.commentButton}>Adicionar coment√°rio</Text>
            </TouchableOpacity>

            {item.comments?.map((c: string, idx: number) => (
              <Text key={idx} style={styles.comment}>
                ‚Ä¢ {c}
              </Text>
            ))}
          </View>
        )}
        showsVerticalScrollIndicator={false}
      />

      {/* ‚ûï Bot√£o para adicionar livro */}
      <TouchableOpacity
        style={styles.addButton}
        onPress={() => router.push('/addBook')}
      >
        <Text style={styles.addButtonText}>+</Text>
      </TouchableOpacity>
    </View>
  );
}

const windowWidth = Dimensions.get('window').width;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f0f8ff',
    paddingHorizontal: 16,
    paddingTop: 24,
  },
  header: {
    fontSize: 28,
    fontWeight: '600',
    color: '#1a237e',
    marginBottom: 20,
    textAlign: 'center',
  },
  searchInput: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    padding: 8,
    marginBottom: 16,
    backgroundColor: '#fff',
  },
  listContent: {
    paddingBottom: 20,
  },
  card: {
    backgroundColor: '#ffffff',
    borderRadius: 12,
    marginBottom: 18,
    padding: 10,
    elevation: 4,
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowOffset: { width: 0, height: 2 },
    shadowRadius: 5,
    width: windowWidth - 32,
  },
  cover: {
    width: 100,
    height: 140,
    resizeMode: 'cover',
    borderRadius: 8,
  },
  info: {
    flex: 1,
    padding: 12,
    justifyContent: 'center',
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#0d47a1',
    marginBottom: 4,
  },
  author: {
    fontSize: 15,
    color: '#5d5d5d',
    fontStyle: 'italic',
    marginBottom: 2,
  },
  publicacao: {
    fontSize: 13,
    color: '#888',
  },
  favorite: {
    fontSize: 16,
    marginTop: 8,
    color: '#e65100',
  },
  stars: {
    flexDirection: 'row',
    marginVertical: 5,
  },
  star: {
    fontSize: 20,
    marginHorizontal: 2,
    color: '#ff9800',
  },
  commentInput: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    padding: 6,
    marginVertical: 6,
    backgroundColor: '#fff',
  },
  commentButton: {
    color: '#1a237e',
    fontWeight: 'bold',
    marginBottom: 4,
  },
  comment: {
    fontStyle: 'italic',
    fontSize: 13,
    marginLeft: 6,
  },
  addButton: {
    position: 'absolute',
    bottom: 30,
    right: 20,
    backgroundColor: '#1a237e',
    width: 60,
    height: 60,
    borderRadius: 30,
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 6,
    shadowColor: '#000',
    shadowOpacity: 0.2,
    shadowOffset: { width: 0, height: 3 },
    shadowRadius: 4,
  },
  addButtonText: {
    color: '#fff',
    fontSize: 30,
    fontWeight: 'bold',
  },
});